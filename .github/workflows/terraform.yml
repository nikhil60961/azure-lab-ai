name: Terraform Deployment

on:
  push:
    branches:
      - main
      - nonprod


permissions:
  id-token: write
  issues: write
  contents: read
  actions: read

concurrency:
  group: terraform-deployment # Unique lock per branch
  cancel-in-progress: false # Queue new workflows instead of canceling


jobs:

######## Terraform plan and apply for dev branch   ########### 

  terraform_validate_dev:
    if: github.ref == 'refs/heads/nonprod'
    runs-on: self-hosted
    environment: 'terraform_validate_dev'
    env:
      RUNNER_TEMP: /tmp

    steps:

      - uses: azure/login@v2
        with:
         creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
         allow-no-subscriptions: true

      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Dump Unmasked client-id
        run: echo "Unmasked clientid:" ${{secrets.ARM_CLIENT_ID}} | sed 's/./& /g'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.0

      - name: Run terraform fmt
        run: |
            terraform fmt 


      - name: Terraform Init
        run: terraform init -backend=false


      - name: Validate Terraform Configuration
        run: terraform validate

  terraform_plan_dev:
    if: success()
    runs-on: self-hosted
    environment: 'terraform_plan_dev'
    env:
      RUNNER_TEMP: /tmp
    needs: terraform_validate_dev
    steps:
      - uses: azure/login@v2
        with:
         creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
         allow-no-subscriptions: true
      - name: Dump Unmasked client-id
        run: echo "Unmasked clientid:" ${{secrets.ARM_CLIENT_ID}} | sed 's/./& /g'
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
         terraform_version: 1.1.0

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Terraform Init
        run: |
          terraform init \
            -reconfigure \
            -backend-config="resource_group_name=NYU-lab" \
            -backend-config="storage_account_name=nyudev" \
            -backend-config="container_name=nyudevcontainer" \
            -backend-config="key=nyu-lab-ai.tfstate" \
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}


      - name: Terraform Plan
        run: |
          terraform plan -var-file=nonprod/dev/dev.tfvars -out=tfplan -input=false
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}



  terraform_dev_apply:
    needs: terraform_plan_dev
    runs-on: self-hosted
    environment: 'dev-apply-approval'
    steps:
      - uses: azure/login@v2
        with:
         creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
         allow-no-subscriptions: true
      - name: Dump Unmasked client-id
        run: echo "Unmasked clientid:" ${{secrets.ARM_CLIENT_ID}} | sed 's/./& /g'
      - name: Terraform Init
        run: |
          terraform init \
            -reconfigure \
            -backend-config="resource_group_name=NYU-lab" \
            -backend-config="storage_account_name=nyudev" \
            -backend-config="container_name=nyudevcontainer" \
            -backend-config="key=nyu-lab-ai.tfstate" \
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}


      - name: Terraform Plan
        run: |
          terraform plan -var-file=nonprod/dev/dev.tfvars -out=tfplan -input=false
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Terraform Apply
        run: |

      
          # Apply the Terraform plan
          terraform apply -auto-approve tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

          

######## Terraform plan and apply for main branch   ########### 

  terraform_apply_prod:
    if: github.ref == 'refs/heads/main'
    runs-on: self-hosted
    environment: 'terraform_apply_prod'
    needs: terraform_plan_dev
    steps:
        # - uses: azure/login@v2
        #   with:
        #     creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
        #     allow-no-subscriptions: true

        - name: Checkout Code
          uses: actions/checkout@v3
  
  
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: 1.1.0
  

        - name: Terraform Init

          run: |
            terraform init \
              -reconfigure \
              -backend-config="resource_group_name=NYU-lab" \
              -backend-config="storage_account_name=nyudev" \
              -backend-config="container_name=nyudevcontainer" \
              -backend-config="key=nyu-lab-ai.tfstate" \
          env:
            ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
            ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      

        - name: Terraform Plan
          run: |
            terraform plan -var-file=nonprod/dev/dev.tfvars -out=dev_tfplan -input=false
          env:
            ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
            ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

        - name: Terraform Apply
          run: |
            # Navigate to the directory containing the Terraform plan file
            cd dev_tfplan_contents
        
            # Apply the Terraform plan
            terraform apply -auto-approve dev_tfplan
          env:
            ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
            ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
            ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
